import numpy as np


# 数组的分割
# 1.split分割
# 1.1 np.split()分割一维数组，传递一个整数，传递一个数组
# 创建一个一维数组
a=np.arange(20)
print('a{}'.format(a))
# np.split(ndarray,indices_or_sections)  # 被分割数组，indices切分块数，整数平均切分
a1=np.split(a,4)  # a分割完后组成一个list
print('a1{}'.format(a1))  # 返回一个list，

# 传递数组分割
a2=np.split(a,[3,10,12])  # 数组里面是数组的截断位置处，3就是索引为3的位置处，
print('a2{}'.format(a2))

# 1.2 np.split()分割二维数组，
b=np.random.randint(1,20,[4,3])
print('b{}'.format(b))
b1=np.split(b,3,1)   # 分割b成为3个数组，沿着1方向，列方向
print('b1{}'.format(b1))

b2=np.split(b,2,0)  # 分割b成为2个数组，沿着0方向，行方向
print('b2{}'.format(b2))

# 2.水平分割
# 水平方向上进行分割
# np.hsplit(ndarray,n)
c=np.arange(16).reshape([4,4])
print('c{}'.format(c))

c1=np.hsplit(c,2)  # 水平方向上分割成2个
print('c1{}'.format(c1))

# 3.垂直分割
# 在垂直方向上进行分割
# np.vsplit(ndarray,n)
c2=np.vsplit(c,2)  # 在垂直方向上分割成2个
print('c2{}'.format(c2))


# 4.transpose转置
# transpose()和T的效果一样
# 前面学到的转置ndarray.T
print('c.T{}'.format(c.T))

# 使用transpose()转置，ndarray.transpose()
print('c.transpose(){}'.format(c.transpose()))

d=np.arange(1,37).reshape(1,3,3,4)
print('d{}'.format(d))
# .T转置
print('.T{},shape{}'.format(d.T,d.T.shape))  # 转置后，shape变为[4,3,3,1]
print('transpose{},shape{}'.format(d.transpose(),d.transpose().shape))


# a[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]
# a1[array([0, 1, 2, 3, 4]), array([5, 6, 7, 8, 9]), array([10, 11, 12, 13, 14]), array([15, 16, 17, 18, 19])]
# a2[array([0, 1, 2]), array([3, 4, 5, 6, 7, 8, 9]), array([10, 11]), array([12, 13, 14, 15, 16, 17, 18, 19])]
# b[[ 9 14 11]
#  [ 6 16  7]
#  [14 14 18]
#  [13 10 10]]
# b1[array([[ 9],
#        [ 6],
#        [14],
#        [13]]), array([[14],
#        [16],
#        [14],
#        [10]]), array([[11],
#        [ 7],
#        [18],
#        [10]])]
# b2[array([[ 9, 14, 11],
#        [ 6, 16,  7]]), array([[14, 14, 18],
#        [13, 10, 10]])]
# c[[ 0  1  2  3]
#  [ 4  5  6  7]
#  [ 8  9 10 11]
#  [12 13 14 15]]
# c1[array([[ 0,  1],
#        [ 4,  5],
#        [ 8,  9],
#        [12, 13]]), array([[ 2,  3],
#        [ 6,  7],
#        [10, 11],
#        [14, 15]])]
# c2[array([[0, 1, 2, 3],
#        [4, 5, 6, 7]]), array([[ 8,  9, 10, 11],
#        [12, 13, 14, 15]])]
# c.T[[ 0  4  8 12]
#  [ 1  5  9 13]
#  [ 2  6 10 14]
#  [ 3  7 11 15]]
# c.transpose()[[ 0  4  8 12]
#  [ 1  5  9 13]
#  [ 2  6 10 14]
#  [ 3  7 11 15]]
# d[[[[ 1  2  3  4]
#    [ 5  6  7  8]
#    [ 9 10 11 12]]
#
#   [[13 14 15 16]
#    [17 18 19 20]
#    [21 22 23 24]]
#
#   [[25 26 27 28]
#    [29 30 31 32]
#    [33 34 35 36]]]]
# .T[[[[ 1]
#    [13]
#    [25]]
#
#   [[ 5]
#    [17]
#    [29]]
#
#   [[ 9]
#    [21]
#    [33]]]
#
#
#  [[[ 2]
#    [14]
#    [26]]
#
#   [[ 6]
#    [18]
#    [30]]
#
#   [[10]
#    [22]
#    [34]]]
#
#
#  [[[ 3]
#    [15]
#    [27]]
#
#   [[ 7]
#    [19]
#    [31]]
#
#   [[11]
#    [23]
#    [35]]]
#
#
#  [[[ 4]
#    [16]
#    [28]]
#
#   [[ 8]
#    [20]
#    [32]]
#
#   [[12]
#    [24]
#    [36]]]],shape(4, 3, 3, 1)
# transpose[[[[ 1]
#    [13]
#    [25]]
#
#   [[ 5]
#    [17]
#    [29]]
#
#   [[ 9]
#    [21]
#    [33]]]
#
#
#  [[[ 2]
#    [14]
#    [26]]
#
#   [[ 6]
#    [18]
#    [30]]
#
#   [[10]
#    [22]
#    [34]]]
#
#
#  [[[ 3]
#    [15]
#    [27]]
#
#   [[ 7]
#    [19]
#    [31]]
#
#   [[11]
#    [23]
#    [35]]]
#
#
#  [[[ 4]
#    [16]
#    [28]]
#
#   [[ 8]
#    [20]
#    [32]]
#
#   [[12]
#    [24]
#    [36]]]],shape(4, 3, 3, 1)
#




